/*
X = sum{ Ai*Ai |  1<=i<=N+M-1 }
Y = sum{ Ai | 1<=i<=N+M-1 }

V = (N+M-1) * X - Y^2
*/
#include <iostream>
#include <algorithm>
#include <cstring>

using namespace std;

#define INF -1
#define MAXN 32
int N, M;
int ans;
int mat[MAXN][MAXN];
int sqr[MAXN][MAXN];

int rdMin[MAXN][MAXN];

// dp[i][j][k] 表示走到从(1, 1) => (i, j)走过的数的和为k时的最小平方和 
int dp[MAXN][MAXN][MAXN*(MAXN + MAXN)];

int s[MAXN*MAXN];

// 记忆化搜索 
int dfs(int r, int c, int sum) {

	if (dp[r][c][sum] != -1) {
		return dp[r][c][sum];
	}

	if (mat[r][c] > sum) {
		return dp[r][c][sum] = INF;
	}


	int presum = (sum - mat[r][c]);
	int tmpv, prev = INF;
	if (r > 1) {
		tmpv = dfs(r - 1, c, presum);

		if (tmpv < prev) {
			prev = tmpv;
		}
	}

	if (c > 1) {
		tmpv = dfs(r, c - 1, presum);

		if (tmpv < prev) {
			prev = tmpv;
		}
	}
	if (prev == INF)
		return dp[r][c][sum] = INF;
	return dp[r][c][sum] = prev + sqr[r][c];
}

int Min(int a, int b) {
	if (a == INF) return b;
	if (b == INF) return a;
	return a < b ? a : b;
}

int main() {
	int t;
	int i, j, k;
	int cases = 0;
	scanf("%d", &t);
	while (t--) {
		scanf("%d %d", &N, &M);
		s[0] = 0;
		memset(sqr, 0, sizeof(sqr));
		for (i = 1; i <= N; i++) {
			for (j = 1; j <= M; j++) {
				scanf("%d", &mat[i][j]);
				s[++s[0]] = mat[i][j];

				sqr[i][j] = mat[i][j] * mat[i][j];
			}
		}

		sort(&s[1], &s[1] + s[0]);
		int MAX = 0;
		for (i = s[0]; i > s[0] - (N + M - 1); i--) {
			MAX += s[i];
		}

		for (i = 0; i <= N; i++) {
			for (j = 0; j <= M; j++) {
				for (k = 0; k <= MAX; k++) {
					dp[i][j][k] = INF;
				}
			}
		}
		dp[1][1][mat[1][1]] = sqr[1][1];

		for (i = 1; i <= N; i++) {
			for (j = 1; j <= M; j++) {
				for (k = mat[i][j]; k <= MAX; k++) {
					if (i == 1 && j == 1) {
						continue;
					}
					dp[i][j][k] = Min(dp[i - 1][j][k - mat[i][j]], dp[i][j - 1][k - mat[i][j]]);
					if (dp[i][j][k] != -1) {
						dp[i][j][k] += sqr[i][j];
					}
				}
			}
		}

		ans = INF;
		for (i = MAX; i >= 0; i--) {
			if (dp[N][M][i] == INF) continue;
			//printf("%d %d %d %d\n", N, M, i, dp[N][M][i]);
			int v = (N + M - 1) * dp[N][M][i] - i*i;
			ans = Min(ans, v);
		}

		printf("Case #%d: %d\n", ++cases, ans);

	}
	return 0;

}
/*
121
2 2
1 2
3 4

12
4 4
1 1 2 1
2 3 1 2
0 1 2 3
3 2 1 1

20
30 30
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29
29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29 29 30 28 27 26 25 28 29 30 29

*/