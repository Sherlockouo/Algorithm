// HDU 2018
// 二维递推题
// 能生育的称为0号牛，刚出生的为3号牛，过了一年为2号牛，再过一年为1号牛；
// dp[i][0] = dp[i-1][0] + dp[i-1][1]; // 0好牛就是去年0号牛加上1号牛 
// dp[i][1] = dp[i-1][2];              // 1号牛就是去年2号牛演变过来的 
// dp[i][2] = dp[i-1][3];              // 2号牛就是去年的3号牛演变过来的 
// dp[i][3] = dp[i][0];                // 当年刚出生的牛和当年的能生育的牛数量一致 
#include <iostream>
#include <algorithm>
using namespace std;

int n;
__int64 dp[100][4], v[100];


int main() {
	int i, j;
	dp[1][0] = 1;
	v[1] = 1;
	for (i = 2; i <= 55; ++i) {
		dp[i][0] = dp[i - 1][0] + dp[i - 1][1]; // 0好牛就是去年0号牛加上1号牛 
		dp[i][1] = dp[i - 1][2];              // 1号牛就是去年2号牛演变过来的 
		dp[i][2] = dp[i - 1][3];              // 2号牛就是去年的3号牛演变过来的 
		dp[i][3] = dp[i][0];                // 当年刚出生的牛和当年的能生育的牛数量一致 

		v[i] = dp[i][0] + dp[i][1] + dp[i][2] + dp[i][3];
	}

	while (scanf("%d", &n) != EOF && n) {
		printf("%I64d\n", v[n]);
	}
	return 0;
}