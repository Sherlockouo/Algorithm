#include <iostream>

using namespace std;

#define MAXN 5000000

int Sum[MAXN];
char Mod11[MAXN];
char Cnt[MAXN];

int sum(int num) {
	int u = num;
	if (Sum[u]) {
		return Sum[u];
	}
	int s = 0;
	while (num) {
		s += num % 10;
		num /= 10;
	}
	return Sum[u] = s;
}

int cnt(int num) {
	int u = num;
	int c = 0;
	if (Cnt[u]) {
		return Cnt[u];
	}
	while (num) {
		c++;
		num /= 10;
	}
	return Cnt[u] = c;
}

int f[10];
int mod11mod[12][12][12];

int main() {

	int i, j, k;
	f[0] = 1;
	for (i = 1; i < 10; ++i) {
		f[i] = (f[i - 1] * 10) % 11;
	}
	for (i = 0; i < 12; ++i) {
		for (j = 0; j < 12; ++j) {
			for (k = 0; k < 12; ++k)
				mod11mod[i][j][k] = (i*j + k) % 11;
		}
	}

	for (i = 0; i < MAXN; ++i) {
		Mod11[i] = i % 11;
	}

	int n, t;
	int cases = 0;
	while (scanf("%d %d", &n, &t) != EOF) {
		if (n == -1 && t == -1) break;
		printf("Case #%d: ", ++cases);
		int presum = sum(n);
		int premod = n % 11;
		if (n == 0) {
			t = 0;
		}
		while (t--) {
			premod = mod11mod[premod][f[cnt(presum)]][Mod11[presum]];
			presum += sum(presum);
		}
		printf("%s\n", premod == 0 ? "Yes" : "No");
	}
	return 0;
}

/*
n=1

t=...
1,5,15,50,51,55,60,104,112,121,130,146,147,163,185,197,198,215,244,
263,271,279,304,305,332,338,358,363,371,394,399,408,416,420,421,429,
432,437,457,472,474,479,494,497,506,515,534,538,545,565,575,581,596,
600,614,638,645,670,694,699,703,713,734,743,744,771,772,793,795,808,
842,844,848,850,859,861,874,875,895,914,919,921,938,949,960,982,993


presum=...
2,23,107,517,530,587,658,1246,1348,1487,1636,1903,1916,2117,2444,2651,
2665,2957,3436,3749,3899,4049,4444,4460,4954,5044,5344,5426,5558,6010,
6065,6211,6322,6391,6410,6551,6616,6719,7121,7351,7390,7493,7816,7889,
8077,8249,8641,8719,8897,9299,9518,9644,10003,10027,10192,10507,10619,
11023,11329,11420,11477,11651,12028,12155,12169,12617,12634,13025,13049,
13246,13828,13867,13954,14002,14114,14138,14344,14360,14699,15052,15131,
15155,15421,156